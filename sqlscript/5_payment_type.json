{
	"name": "5_payment_type",
	"properties": {
		"folder": {
			"name": "nyc_taxi/discovery"
		},
		"content": {
			"query": "USE nyc_taxi_discovery;\n--ESSE É UM JEITO DE LER JSON, MAS NÃO É O MAIS EFICIENTE.\nSELECT CAST(JSON_VALUE(jsonDoc, '$.payment_type') AS TINYINT) payment_type,\n        CAST(JSON_VALUE(jsonDoc, '$.payment_type_desc') AS VARCHAR(15)) payment_type_desc\nFROM\n    OPENROWSET(\n        BULK 'payment_type.json',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR = '0x0b',\n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) \n    WITH (\n        jsonDoc NVARCHAR(MAX)\n    )\n    AS payment_type;\n\n--Jeito mais eficiente de ler jsons\nSELECT payment_type, description\nFROM\n    OPENROWSET(\n        BULK 'payment_type.json',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR = '0x0b',\n        FIELDQUOTE = '0x0b'\n    ) \n    WITH (\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        payment_type TINYINT,\n        description VARCHAR(15) '$.payment_type_desc' --É assim que se renomeia a coluna em um json\n    )\n\n\n\n--Como ler jsons com array\n\nSELECT payment_type, payment_value_desc\nFROM\n    OPENROWSET(\n        BULK 'payment_type_array.json',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR = '0x0b',\n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    )\nWITH (\n    jsonDoc NVARCHAR(MAX)\n) AS payment_type\nCROSS APPLY OPENJSON(jsonDoc)\nWITH(\n    payment_type TINYINT,\n    payment_type_desc NVARCHAR(MAX) AS JSON\n)\nCROSS APPLY OPENJSON(payment_type_desc)\nWITH(\n    sub_type TINYINT,\n    payment_value_desc VARCHAR(20) '$.value'\n\n)\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}